/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package maestros;
import java.util.Vector;
import javax.swing.ListSelectionModel;

/**
 *
 * @author prof_tes_a
 */
public class RelMaeRel_01 extends javax.swing.JDialog
{
    private boolean blnAce;
    private Vector<String> vecMar, vecImgMar;

    /**
     * Creates new form RelMaeRel_01
     */
    public RelMaeRel_01(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        lstMar.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        vecMar=new Vector<String>();
        vecImgMar=new Vector<String>();
        cargarMarcas();
        cargarImagenesMarcas();
        lstMar.requestFocus();
        lstMar.setSelectedIndex(0);
        blnAce=false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstMar = new javax.swing.JList();
        lblImgMar = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        butAce = new javax.swing.JButton();
        butCan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Marcas");

        jScrollPane1.setPreferredSize(new java.awt.Dimension(150, 130));

        lstMar.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstMar.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstMarValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstMar);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.LINE_START);
        getContentPane().add(lblImgMar, java.awt.BorderLayout.CENTER);

        jPanel1.setPreferredSize(new java.awt.Dimension(484, 40));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        butAce.setText("Aceptar");
        butAce.setPreferredSize(new java.awt.Dimension(100, 30));
        butAce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAceActionPerformed(evt);
            }
        });
        jPanel1.add(butAce);

        butCan.setText("Cancelar");
        butCan.setPreferredSize(new java.awt.Dimension(100, 30));
        butCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCanActionPerformed(evt);
            }
        });
        jPanel1.add(butCan);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        setSize(new java.awt.Dimension(450, 300));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lstMarValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstMarValueChanged
        int intMarSel; //Marca seleccionada en el JList.
        intMarSel=lstMar.getSelectedIndex();
        lblImgMar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/" + vecImgMar.get(intMarSel))));
    }//GEN-LAST:event_lstMarValueChanged

    private void butAceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAceActionPerformed
        blnAce=true;
        this.setVisible(false);
    }//GEN-LAST:event_butAceActionPerformed

    private void butCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCanActionPerformed
        blnAce=false;
        this.setVisible(false);
    }//GEN-LAST:event_butCanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelMaeRel_01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelMaeRel_01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelMaeRel_01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelMaeRel_01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RelMaeRel_01 dialog = new RelMaeRel_01(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAce;
    private javax.swing.JButton butCan;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImgMar;
    private javax.swing.JList lstMar;
    // End of variables declaration//GEN-END:variables

    private boolean cargarMarcas()
    {
        boolean blnRes=true;
        try
        {
            java.io.FileReader objFilRea=new java.io.FileReader("Marcas.txt");
            java.io.BufferedReader objBufRea=new java.io.BufferedReader(objFilRea);
            String strLin;
            vecMar.removeAllElements();
            while((strLin=objBufRea.readLine())!=null)
                vecMar.add(strLin);
            lstMar.setListData(vecMar);
            objBufRea.close();
        }
        catch(java.io.FileNotFoundException e)
        {
            System.out.println("Excepci贸n: " + e.toString());
            blnRes=false;
        }
        catch(java.io.IOException e)
        {
            System.out.println("Excepci贸n: " + e.toString());
            blnRes=false;
        }
        return blnRes;
    }

    private boolean cargarImagenesMarcas()
    {
        boolean blnRes=true;
        try
        {
            java.io.FileReader objFilRea=new java.io.FileReader("ImagenesMarcas.txt");
            java.io.BufferedReader objBufRea=new java.io.BufferedReader(objFilRea);
            String strLin;
            vecImgMar.removeAllElements();
            while((strLin=objBufRea.readLine())!=null)
                vecImgMar.add(strLin);
            objBufRea.close();
        }
        catch(java.io.FileNotFoundException e)
        {
            System.out.println("Excepci贸n: " + e.toString());
            blnRes=false;
        }
        catch(java.io.IOException e)
        {
            System.out.println("Excepci贸n: " + e.toString());
            blnRes=false;
        }
        return blnRes;
    }
    
    public String getMarcaSeleccionada()
    {
        if (lstMar.getSelectedIndex()==-1)
        {
            return "";
        }
        else
        {
            return lstMar.getSelectedValue().toString();
        }
    }
    
    public boolean isClickAceptar()
    {
        return blnAce;
    }

}
